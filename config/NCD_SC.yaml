common:
    lid_topic:  "/os1_cloud_node/points"
    imu_topic:  "/os1_cloud_node/imu"
    time_sync_en: false         # ONLY turn on when external time synchronization is really not possible

preprocess:
    lidar_type: 3                # 1 for Livox serials LiDAR, 2 for Velodyne LiDAR, 3 for ouster LiDAR,
    scan_line: 16
    scan_rate: 10                # only need to be set for velodyne, unit: Hz,
    blind: 1
    point_filter_num: 1

mapping:
    down_sample_size: 2.0
    max_iteration: 4
    voxel_size: 1.0
    max_layer: 2 # 原始参数4                # 4 layer, 0, 1, 2, 3
    layer_point_size: [ 5, 5, 5, 5, 5 ]
    plannar_threshold: 0.01
    max_points_size: 1000
    max_cov_points_size: 1000

    fov_degree:    360
    det_range:     100.0
    extrinsic_est_en:  true      # true: enable the online estimation of IMU-LiDAR extrinsic,
    extrinsic_T: [-0.006253, 0.011775, 0.028535]
    extrinsic_R : [-1, 0, 0,
                0, -1, 0,
                0, 0, 1]

noise_model:
    ranging_cov: 0.001
    angle_cov: 0.01
    acc_cov: 0.1
    gyr_cov: 0.1
    b_acc_cov: 0.0001
    b_gyr_cov: 0.0001


publish:
    pub_voxel_map: false
    publish_max_voxel_layer: 1         # only publish 0,1,2 layer's plane
    path_en:  true
    scan_publish_en:  true       # false: close all the point cloud output
    dense_publish_en: true       # false: low down the points number in a global-frame point clouds scan.
    scan_bodyframe_pub_en: true  # true: output the point cloud scans in IMU-body-frame

pcd_save:
    pcd_save_en: false
    interval: -1                 # how many LiDAR frames saved in each pcd file;
    # -1 : all frames will be saved in ONE pcd file, may lead to memory crash when having too much frames.

# data_recorder:
#     result_dir: "/workspace/lbench/results"
#     dataset: "NTU"
#     data_id: "eee_01"
#     test_topic: "baselines"
#     lidar_names: ["OsHori","OsVert"]
#     lidar_indices: [0]
#     algorithm: "pvlio"
#     param_set_name: "default"
#     save_frame_mode: 0 # 0: no save, 1: save entire frame at once, 2: save each frame